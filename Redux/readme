/* What is redux

-redux is not tied with react but is a js library
-redux is a state container/management
    state of an app is the state shared by all the individual components of that app
    eg loginFormComponent
        state = {
            username = '',
            paswword = '',
            ...
        }
-redux will store and manage the application state
-redux is predictable

-----wy redux is bad-----
-config redux is an app seems complicated
-redux requires alot of other packages to be installed to get redux to be effective
-redux requires too much boilerplate code

Why redux toolkit 

-serves as an abtraction over redux. it hides the difficult parts.

what to consider when to use redux

-large amounts of application state are needed in many places in the app
-the app state is updated frequently over time
-the logic to update the state may be complex 
-the has a medium or large sized codebase

----Three core concepts-----

-store (safely holds the state of an apoplication)
-action (describes what happened in the application)
-reducer (handles the action and decides how to update the state)

----Three principles----

-global state of your application is stored as an object inside a single store
-only way to change state is to dispatch an action, object that describes what happened
-specify hot state tree is updated based on actions, you write pure reducers

----Redux Store responsibilities----

-Holds application state
-allows access to state via getState()
-allows state to be updated via dispatch(action)
-registers listeners via subscribe(listener)
-handles unregistering of listeners via the function returned by subscibe(listener)

library to help when working with redux
So keeping track that we updating the correct object we use a library called immer 
# npm i immer

----Middleware----

-extends redux with custom functionality
-provides a third party extension point between dispatching an action and the  moment it reaches the reducer
-we can use it for eg. logging, crash reporting, performing asynchronous tasks etc

another library but for redux tool that u have in browser, this one is for terminal
# npm i redux-logger

----Async action creators----

-___axios 
    -requests to an api end point
-___redux-thunk 
    -define async action creators
    -Middleware 

# npm i axios redux-thunk
____JSONplaceholder is a good resource for fake api

Async summary
import the redux-thunk middleware and pass it out in the createStore function
what this allows is for an action creator to return a function instead of an action 
the function can perfom side effects such as asynchronous tasks
the function can also dispatch regular actions which will then be handled by the read user

*/

